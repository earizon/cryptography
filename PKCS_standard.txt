[[{standards.PKCS,standards.hardware,crypt_asymmetric,secret_mng]]
# PKCS standard 
* <https://en.wikipedia.org/wiki/PKCS>

PKCS: Set of "high-level" "Public Key Cryptography Standards":</a>
* PKCS #1  math. properties + format of RSA pub/priv keys, and
  basic algorithms and encoding/padding schemes for RSA
  (de/en)cryption,  producing/verifying signatures.<br/>

  Extracted from <https://en.wikipedia.org/wiki/Probabilistic_signature_scheme>
  "...  In general, RSA-PSS should be used as a replacement for RSA-PKCS#1 v1.5. "
  See also [related paper](https://web.archive.org/web/20170810025803/http://grouper.ieee.org/groups/1363/P1363a/contributions/pss-submission.pdf) (year 1998)

* PKCS #3  Diffieâ€“Hellman Key Agreement Standard
* PKCS #5  Password-based Encryption Standard
* PKCS #7  Cryptographic Message Syntax used to sign and/or encrypt messages 
  under a PKI. <br/>
  See also (PKCS #7 derived) @:
  <https://en.wikipedia.org/wiki/Cryptographic_Message_Syntax>.
  For example when exporting a certificate from a key-store the
  actual certificate chain is exported as in PKCS#7 format.
* PKCS #8  Private-Key Information Syntax Standard. Used to protect priv.cert
  Key (and its matching pub.key), (.pem format)
* PKCS #9  Defines selected attribute types for use in PKCS #6,#7,#8,#10
* PKCS #10 Certification Request Standard file format.
  (for example, generated by $ keytool -certreq ... command)
* PKCS #11 Cryptographic (Athentication) Token Interface ("Cryptoki")
  API defining a generic interface <https://en.wikipedia.org/wiki/PKCS_11>.
  PKCS #11 defines a common API to be used by different **"hardware"**,
  while PKCS #12 defines a common file format.
  [[{doc_has.comparative,standards.hardware}]]
* PKCS #12  Personal Information Exchange Syntax defining file (.p12 or .pfx file ext.)
  format commonly used to store private keys, protected with a password-based
  symmetric key. Used by:
  * Java key store (replacing "deprecating" Java JKS format since JDK 9).
  * client auth. certs in Firefox, Apache Tomcat.
  * Compared to PKCS#8:
    * PKCS #8  defines what should be included in a private key file.
    * PKCS #12 defines how to package a private key AND ITS CERTIFICATES into a single file.
  * Note: PCKS#12 .p12, PKCS#8 .pem and Java KeyStore .jks are sort
    of competing formats.
* PKCS #15 idetification through tokens allowing users to identify
  themselves to applications, independent of the application's Crypto.
  implementation (PKCS #11) or other API.
* See also: ISO 7816 standard for electronic identification cards with 
  contacts, especially smart cards. 
  <https://en.wikipedia.org/wiki/ISO/IEC_7816>
[[standards.PKCS}]]
